#! /bin/bash

#----------------------------------------------------------------------------
# Get our program name
#----------------------------------------------------------------------------

PROG=`basename $0`


#----------------------------------------------------------------------------
# Environment setup.
#----------------------------------------------------------------------------

# Where is OpenSSL 1.1.x?

OPENSSL_LIBDIR=@OPENSSL_LIBDIR@
if [ "$OPENSSL_LIBDIR" != "" ]
then
	if [ "$LD_LIBRARY_PATH" = "" ]
	then
		export LD_LIBRARY_PATH=$OPENSSL_LIBDIR
	else
		export LD_LIBRARY_PATH=$OPENSSL_LIBDIR:$LD_LIBRARY_PATH
	fi
fi

# Do we need to add curl's libdir?

CURL_LIBDIR=@CURL_LIBDIR@
if [ "$CURL_LIBDIR" != "" ]
then
	if [ "$LD_LIBRARY_PATH" = "" ]
	then
		export LD_LIBRARY_PATH=$OPENSSL_LIBDIR
	else
		export LD_LIBRARY_PATH=$OPENSSL_LIBDIR:$LD_LIBRARY_PATH
	fi
fi

#----------------------------------------------------------------------------
# Parse our settings file
#----------------------------------------------------------------------------

. ./settings

# Debugging options

if [ "$VERBOSE" != "" -a "0$VERBOSE" -ne 0 ]; then
	flag_verbose=-v
fi

if [ "$DEBUG" != "" -a "0$DEBUG" -ne 0 ]; then
	flag_debug=-d
fi

#----------------------------------------------------------------------------
# Execute
#----------------------------------------------------------------------------

if [ "$PROG" = "run-client" ]
then
	./client \
		$flag_debug $flag_verbose $flag_dcap \
		"$@"
elif [ "$PROG" = "run-provisioning" ]
then
	./provisioning_service \
		$flag_debug $flag_verbose $flag_dcap \
		"$@"
elif [ "$PROG" = "run-bootstrap" ]
then
	./bootstrap_service \
		$flag_debug $flag_verbose $flag_dcap \
		"$@"
else
	echo "$PROG: unrecognized instance (expected run-client, run-provisioning or run-bootstrap)" >&2
	exit 1
fi
